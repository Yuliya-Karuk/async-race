var w=Object.defineProperty;var B=(i,t,e)=>t in i?w(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var a=(i,t,e)=>(B(i,typeof t!="symbol"?t+"":t,e),e);import{S as k,C as d,W as h}from"./svgComponent-WQx8ZGwf.js";import{B as m,c as n,f as I,g as N,i as b,b as y,d as A}from"./index-DHYfWUqA.js";const x="car",T="car-btn",f="race-controls",S="race-btn",E="race-btn_start",P="race-btn_stop",L="car-controls",R="car-track",_="car-image",W="car_broken",M="car_broken",$="car-name",U="track-container",s={car:x,"car-btn":"car-btn",carBtn:T,"race-controls":"race-controls",raceControls:f,"race-btn":"race-btn",raceBtn:S,"race-btn_start":"race-btn_start",raceBtnStart:E,"race-btn_stop":"race-btn_stop",raceBtnStop:P,"car-controls":"car-controls",carControls:L,"car-track":"car-track",carTrack:R,"car-image":"car-image",carImage:_,car_broken:W,carBroken:M,"car-name":"car-name",carName:$,"track-container":"track-container",trackContainer:U};class D extends m{constructor(e){super("div",[s.car]);a(this,"name");a(this,"color");a(this,"id");a(this,"winnersLink");a(this,"garageLink");a(this,"carName");a(this,"changeButton");a(this,"deleteButton");a(this,"startButton");a(this,"stopButton");a(this,"carImage");a(this,"carSvg");this.name=e.name,this.color=e.color,this.id=e.id,this.createContent()}createContent(){this.createCarControls(),this.createCarTrack()}createCarControls(){this.carName=n("h3",[s.carName],void 0,[{innerText:this.name}]),this.changeButton=n("button",["btn",s.carBtn],{type:"button"},[{innerText:"Change"}]),this.deleteButton=n("button",["btn",s.carBtn],{type:"button"},[{innerText:"Delete"}]);const e=n("div",[s.carControls],void 0,void 0,[this.carName,this.changeButton,this.deleteButton]);this.node.append(e)}createCarTrack(){this.startButton=n("button",["btn",s.raceBtn,"race-btn_start"],{type:"button"},[{innerText:"R"}]),this.stopButton=n("button",["btn",s.raceBtn,"race-btn_stop"],{type:"button"},[{innerText:"S"}]);const e=n("div",[s.raceControls],void 0,void 0,[this.startButton,this.stopButton]);this.carSvg=new k(this.color,this.id),this.carImage=n("div",[s.carImage],void 0,void 0,[this.carSvg.getNode()]);const r=n("div",[s.carTrack],void 0,void 0,[e,this.carImage]),o=n("div",[s.trackContainer],void 0,void 0,[e,r]);this.setRaceButtons(!1),this.node.append(o)}moveCarImage(e){this.carImage.style.transform=`translateX(${e}px)`}setRaceButtons(e){e?(this.startButton.setAttribute("disabled","disabled"),this.stopButton.removeAttribute("disabled")):(this.stopButton.setAttribute("disabled","disabled"),this.startButton.removeAttribute("disabled"))}disableRaceButton(){this.startButton.setAttribute("disabled","disabled"),this.stopButton.setAttribute("disabled","disabled")}setCarBroken(){this.node.classList.add("car_broken")}setCarReady(){this.node.classList.remove("car_broken")}}class q{constructor(t,e){a(this,"view");a(this,"id");a(this,"name");a(this,"color");a(this,"animationSpeed");a(this,"animationTimeInS");a(this,"currentPoint",0);a(this,"isEngineWork");this.animationSpeed=e,this.id=t.id,this.color=t.color,this.name=t.name,this.view=new D(t),this.bindRaceListeners()}bindRaceListeners(){this.view.startButton.addEventListener("click",()=>this.startRaceCar()),this.view.stopButton.addEventListener("click",()=>this.stopRaceCar(!1))}async startRaceCar(){this.view.setRaceButtons(!0),await this.prepareEngine(),this.startAnimation(!1)}async prepareEngine(){const{velocity:t,distance:e}=await d.startCarEngine(this.id);this.animationTimeInS=e/t/1e3,this.currentPoint=0,this.isEngineWork=!0}async startAnimation(t){const e=()=>{const o=I(),l=o/this.animationTimeInS/this.animationSpeed;this.view.moveCarImage(this.currentPoint),this.currentPoint+=l,this.currentPoint<o&&this.isEngineWork&&requestAnimationFrame(e)};requestAnimationFrame(e);const r=Date.now();return this.isEngineWork=await d.driveCar(this.id),!this.isEngineWork&&t?(this.view.setCarBroken(),Promise.reject()):{id:this.id,startTime:r}}async stopRaceCar(t){await d.stopCar(this.id),this.isEngineWork=!1,this.currentPoint=0,this.view.moveCarImage(this.currentPoint),this.view.setCarReady(),t||this.view.setRaceButtons(!1)}}function F(i){let t="";return(!i.value||i.validity.tooShort)&&(t+="Your Car Name should contain minimum 3 letters. "),t}function V(i){let t="";return(!i.value||i.value[0].toUpperCase()!==i.value[0])&&(t+="Your Car Name should start with capital letter. "),t}function G(i){let t="";return i.value.match("^[0-9a-zA-Z\\-\\ ]+$")||(t+="Only English letters, numbers, space and hyphen are allowed."),t}const C=[F,V,G],Z="modal-content",z="modal",O="modal_active",j="modal_active",H="modal-text",Y="modal-results",u={"modal-content":"modal-content",modalContent:Z,modal:z,modal_active:O,modalActive:j,"modal-text":"modal-text",modalText:H,"modal-results":"modal-results",modalResults:Y},v={showModal:"modal_active"};class X extends m{constructor(){super("div",[u.modal]);a(this,"winner");a(this,"time");this.renderContent()}renderContent(){this.winner=n("h2",[u.modalText]),this.time=n("p",[u.modalText]);const e=n("div",[u.modalContent],void 0,void 0,[this.winner,this.time]);this.appendChildren([e])}setWinner(e,r){this.winner.innerHTML=`The Winner is <b>${e}</b>`,this.time.innerHTML=`Race time is <b>${r} s</b>`}showModal(){this.node.classList.add(v.showModal)}hideModal(){this.node.classList.remove(v.showModal)}}const J="input-name",K="toolbar",Q="toolbar_disabled",tt="toolbar_disabled",et="btn",at="controls-container",nt="race-container",rt="input-error",ot="input-color",c={"input-name":"input-name",inputName:J,toolbar:K,toolbar_disabled:Q,toolbarDisabled:tt,btn:et,"controls-container":"controls-container",controlsContainer:at,"race-container":"race-container",raceContainer:nt,"input-error":"input-error",inputError:rt,"input-color":"input-color",inputColor:ot},p={createName:{id:"create-name",type:"text",name:"create-name",required:"required",minlength:"3",pattern:"^[A-Z][a-zA-Z0-9 ]+$",autocomplete:"off",placeholder:"Car name"},createColor:{id:"create-color",type:"color",name:"create-color"},updateName:{id:"update-name",type:"text",name:"update-name",required:"required",minlength:"3",pattern:"^[A-Z][a-zA-Z0-9 ]+$",autocomplete:"off",placeholder:"Car name"},updateColor:{id:"update-color",type:"color",name:"update-color"}};class it extends m{constructor(){super("div",[c.toolbar]);a(this,"element");a(this,"controlsBlock");a(this,"carsBlock");a(this,"raceButton");a(this,"resetButton");a(this,"createCarsButton");a(this,"createInputName");a(this,"createInputColor");a(this,"createCarButton");a(this,"updateInputName");a(this,"updateInputColor");a(this,"updateCarButton");a(this,"createError");a(this,"updateError");a(this,"pgnNext");a(this,"pgnText");a(this,"pgnPrevious");a(this,"total")}renderControlBlock(){this.renderRaceBlock(),this.renderCreateCarBlock(),this.renderUpdateCarBlock(),this.renderPagination()}renderRaceBlock(){this.raceButton=n("button",["btn"],{type:"button"},[{innerText:"Race"}]),this.resetButton=n("button",["btn"],{type:"button"},[{innerText:"Reset"}]),this.createCarsButton=n("button",["btn"],{type:"button"},[{innerText:"Create 100 Cars"}]);const e=n("div",[c.raceContainer],void 0,void 0,[this.raceButton,this.resetButton,this.createCarsButton]);this.appendChildren([e])}renderCreateCarBlock(){this.createInputName=n("input",[c.inputName],p.createName),this.createInputColor=n("input",[c.inputColor],p.createColor),this.createError=n("span",[c.inputError]),this.createCarButton=n("button",["btn","btn_centered"],{type:"button"},[{innerText:"Create Car"}]);const e=n("div",[c.controlsContainer],void 0,void 0,[this.createInputName,this.createInputColor,this.createError,this.createCarButton]);this.appendChildren([e])}renderUpdateCarBlock(){this.updateInputName=n("input",[c.inputName],p.updateName),this.updateInputColor=n("input",[c.inputColor],p.updateColor),this.updateError=n("span",[c.inputError]),this.updateCarButton=n("button",["btn","btn_centered"],{type:"button"},[{innerText:"Update Car"}]);const e=n("div",[c.controlsContainer],void 0,void 0,[this.updateInputName,this.updateInputColor,this.updateError,this.updateCarButton]);this.appendChildren([e])}renderPagination(){this.pgnNext=n("button",["btn","pgn-button","pgn-button_next"],{type:"button"},void 0,[n("span",["pgn-icon"])]),this.pgnPrevious=n("button",["btn","pgn-button","pgn-button_previous"],{type:"button"},void 0,[n("span",["pgn-icon"])]),this.pgnText=n("p",["pgn-text"]),this.total=n("h4",["pgn-total"]);const e=n("div",["pgn-container"],void 0,void 0,[this.pgnPrevious,this.pgnText,this.pgnNext,this.total]);this.appendChildren([e])}setStartButtonsState(e){this.node.classList.remove("toolbar_disabled"),this.raceButton.removeAttribute("disabled"),this.resetButton.setAttribute("disabled","disabled"),e?this.updateCarButton.removeAttribute("disabled"):this.updateCarButton.setAttribute("disabled","disabled")}enableUpdateButton(){this.updateCarButton.removeAttribute("disabled")}setFinishButtonsState(){this.node.classList.remove("toolbar_disabled"),this.resetButton.removeAttribute("disabled"),this.raceButton.setAttribute("disabled","disabled")}resetCreateInputs(){this.createInputName.value="",this.createInputColor.value="#000000"}resetUpdateInputs(){this.updateInputName.value="",this.updateInputColor.value="#000000"}setPagination(e,r){this.pgnNext.removeAttribute("disabled"),this.pgnPrevious.removeAttribute("disabled");const o=Math.ceil(r/7)===0?1:Math.ceil(r/7);this.pgnText.innerText=`${e} / ${o}`,this.total.innerText=`Total cars: ${r}`,e===1&&this.pgnPrevious.setAttribute("disabled","disabled"),e===o&&this.pgnNext.setAttribute("disabled","disabled")}disableAllButtons(){this.node.classList.add("toolbar_disabled")}}const st="garage",ct="cars",g={garage:st,cars:ct};class dt extends m{constructor(){super("div",[g.garage]);a(this,"carsBlock");a(this,"toolbar");a(this,"modal");this.toolbar=new it,this.modal=new X}createToolbar(){this.toolbar.renderControlBlock(),this.appendChildren([this.toolbar.getNode()])}createCarsContainer(){this.carsBlock=n("div",[g.cars]),this.appendChildren([this.carsBlock])}cleanCarsContainer(){this.carsBlock.replaceChildren()}createModal(){document.body.insertAdjacentElement("beforeend",this.modal.getNode())}}class pt{constructor(){a(this,"view");a(this,"chosenCar");a(this,"pageNumber");a(this,"requestAnimationSpeed");a(this,"defaultGeneratorNumber",100);this.view=new dt,this.pageNumber=1,this.renderStaticParts()}renderStaticParts(){this.view.createToolbar(),this.view.createCarsContainer(),this.view.createModal(),this.bindToolbarListeners()}async loadPage(){const{data:t,totalCount:e}=await d.getCars(this.pageNumber);this.requestAnimationSpeed=await N(),this.renderCars(t),this.view.toolbar.setPagination(this.pageNumber,e),this.view.toolbar.setStartButtonsState(!!this.chosenCar)}renderCars(t){this.view.cleanCarsContainer();const e=t.map(r=>{const o=new q(r,this.requestAnimationSpeed);return this.chosenCar&&this.chosenCar.id===o.id&&(this.chosenCar=o),this.bindCarListeners(o),this.view.carsBlock.append(o.view.getNode()),o});return Promise.resolve(e)}bindToolbarListeners(){this.view.toolbar.createCarButton.addEventListener("click",()=>this.handleCreateCar(this.view.toolbar.createInputName)),this.view.toolbar.updateCarButton.addEventListener("click",()=>this.handleUpdateCar(this.view.toolbar.updateInputName)),this.view.toolbar.createCarsButton.addEventListener("click",()=>this.createCars()),this.view.toolbar.pgnNext.addEventListener("click",()=>this.handlePagination(1)),this.view.toolbar.pgnPrevious.addEventListener("click",()=>this.handlePagination(-1)),this.view.toolbar.raceButton.addEventListener("click",()=>this.startCommonRace()),this.view.toolbar.resetButton.addEventListener("click",()=>this.resetCommonRace()),document.addEventListener("click",t=>this.handleClickOutsideModal(t))}async handleCreateCar(t){if(this.checkValidityInput(t)){const e={name:this.view.toolbar.createInputName.value,color:this.view.toolbar.createInputColor.value};await d.createCar(e),this.loadPage(),this.view.toolbar.resetCreateInputs()}}async handleUpdateCar(t){if(this.checkValidityInput(t)){const e={name:this.view.toolbar.updateInputName.value,color:this.view.toolbar.updateInputColor.value};await d.updateCar(b(this.chosenCar).id,e),this.loadPage(),this.view.toolbar.resetUpdateInputs(),this.chosenCar=null}}checkValidityInput(t){var r;const e=b((r=t.nextSibling)==null?void 0:r.nextSibling);e.textContent="";for(let o=0;o<C.length;o+=1)e.textContent+=C[o](t);return e.textContent===""}bindCarListeners(t){t.view.changeButton.addEventListener("click",()=>this.chooseCar(t)),t.view.deleteButton.addEventListener("click",()=>this.handleDeleteCar(t))}chooseCar(t){this.view.toolbar.enableUpdateButton(),this.chosenCar=t,this.view.toolbar.updateInputName.value=t.name,this.view.toolbar.updateInputColor.value=t.color}async handleDeleteCar(t){await d.deleteCar(t.id),t===this.chosenCar&&(this.view.toolbar.resetUpdateInputs(),this.chosenCar=null),await this.checkCarIsWinner(t.id)&&await h.deleteWinner(t.id),this.loadPage()}async createCars(){const e=Array.from({length:this.defaultGeneratorNumber},()=>({color:y(),name:A()})).map(async r=>{await d.createCar(r)});await Promise.all(e),this.loadPage()}async startCommonRace(){const t=await this.stopAllCars(),e=t.map(l=>l.prepareEngine());await Promise.all(e);const r=t.map(l=>(l.view.setRaceButtons(!0),l.startAnimation(!0))),o=await Promise.any(r);this.handleFinishRace(o)}async stopAllCars(){this.view.toolbar.disableAllButtons();const{data:t}=await d.getCars(this.pageNumber),e=await this.renderCars(t);e.forEach(o=>o.view.disableRaceButton());const r=e.map(o=>o.stopRaceCar(!0));return await Promise.all(r),e}async resetCommonRace(){(await this.stopAllCars()).forEach(e=>e.view.setRaceButtons(!1)),this.view.toolbar.setStartButtonsState(!!this.chosenCar)}async handleFinishRace(t){this.view.toolbar.setFinishButtonsState();const e=(Date.now()-t.startTime)/1e3,r=await d.getCar(t.id);this.view.modal.setWinner(r.name,e),this.view.modal.showModal(),this.sendWinnerToServer(r,e)}handleClickOutsideModal(t){t.target===this.view.modal.getNode()&&this.view.modal.hideModal()}async sendWinnerToServer(t,e){const r=await this.checkCarIsWinner(t.id);if(r){const o={wins:r.wins+1,time:e<r.time?e:r.time};await h.updateWinner(r.id,o)}else await h.createWinner({id:t.id,wins:1,time:e})}async checkCarIsWinner(t){return await h.getWinner(t)}handlePagination(t){this.pageNumber+=t,this.loadPage()}}export{pt as Garage};
